@startuml

    namespace de.interactive_instruments.etf.dal.dto.run {

        class TestTaskDto [[TestTaskDto.html]] {
            +TestTaskDto()
            +getExecutableTestSuite(): ExecutableTestSuiteDto
            +setExecutableTestSuite(ExecutableTestSuiteDto): void
            +getTestObject(): TestObjectDto
            +setTestObject(TestObjectDto): void
            +getResultStyle(): ResultStyleDto
            +setResultStyle(ResultStyleDto): void
            +getTestTaskResult(): TestTaskResultDto
            +setTestTaskResult(TestTaskResultDto): void
            +getArguments(): Arguments
            +setArguments(Arguments): void
            +toString(): String
            +ensureBasicValidity(): void
            +createCopy(): TestTaskDto
        }

        class TestRunDto [[TestRunDto.html]] {
            +TestRunDto()
            +getLabel(): String
            +setLabel(String): void
            +getDefaultLang(): String
            +setDefaultLang(String): void
            +getStartTimestamp(): Date
            +setStartTimestamp(Date): void
            +getStartedBy(): String
            +setStartedBy(String): void
            +getLogPath(): String
            +setLogPath(String): void
            +addTestTask(TestTaskDto): void
            +getTestObjects(): List<TestObjectDto>
            +getExecutableTestSuites(): List<ExecutableTestSuiteDto>
            +getTestTaskResults(): List<TestTaskResultDto>
            +getTestResultStatus(): String
            +setTestResultStatus(TestResultStatus): void
            +setTestResultStatus(String): void
            +toString(): String
            +getDescriptiveLabel(): String
            +ensureBasicValidity(): void
            +createCopy(): TestRunDto
        }

        abstract class de.interactive_instruments.etf.dal.dto.ModelItemDto<T>
        de.interactive_instruments.etf.dal.dto.ModelItemDto <|-- TestTaskDto

        de.interactive_instruments.etf.dal.dto.ModelItemDto <|-- TestRunDto

        TestRunDto --> "*" TestTaskDto: testTasks

    }

@enduml
